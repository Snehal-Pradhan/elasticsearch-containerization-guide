{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Elasticsearch &amp; Kibana Docker Guide","text":"<p>This documentation provides a comprehensive guide to setting up Elasticsearch and Kibana using Docker and Docker Compose. </p> <p>With Docker, setting up Elasticsearch and Kibana becomes consistent, automated, and scalable. </p> <p>For those new to Elasticsearch and Docker: Introduction </p> <p>For users with prior experience: Getting Started </p>"},{"location":"dockerization/","title":"Dockerization","text":""},{"location":"dockerization/#overview","title":"Overview","text":"<p>Docker is the de facto standard for containerized deployments. Developers and DevOps engineers use it to simplify deployment, standardize environments, and scale applications efficiently.</p> <p>Elasticsearch, with its distributed architecture and multiple dependencies, benefits significantly from containerization.</p> <p>Experienced users can skip to Getting Started for practical setup instructions.</p>"},{"location":"dockerization/#why-elasticsearch-is-often-used-with-docker","title":"Why Elasticsearch is Often Used with Docker","text":"<p>Elasticsearch is resource-intensive and configuration-sensitive, requiring careful setup of memory, ports, volumes, and networking. Docker helps by:</p> <ul> <li>Encapsulating Elasticsearch in a consistent, reproducible environment.</li> <li>Simplifying multi-node deployments.</li> <li>Enabling rapid testing and experimentation.</li> <li>Integrating seamlessly with Docker Compose and Kubernetes.</li> </ul>"},{"location":"dockerization/#what-is-docker","title":"What is Docker?","text":"<p>Docker packages applications and dependencies into lightweight, portable containers.</p> <ul> <li>Containers run consistently across development, testing, and production.</li> <li>Docker leverages Linux kernel features for efficient isolation.</li> <li>Images are immutable snapshots, versionable and shareable.</li> </ul>"},{"location":"dockerization/#what-is-a-container","title":"What is a Container?","text":"<p>A container is a self-contained runtime including an application and its dependencies.</p> <ul> <li>Isolated from the host system, reducing conflicts.</li> <li>Shares the host OS kernel, making it lightweight and fast.</li> <li>Easily orchestrated, scaled, and updated.</li> </ul>"},{"location":"dockerization/#benefits-of-dockerization","title":"Benefits of Dockerization","text":"<p>Key advantages for Elasticsearch:</p> <ol> <li>Consistency \u2013 Runs identically across environments.</li> <li>Isolation \u2013 Avoids dependency conflicts.</li> <li>Scalability \u2013 Replicate containers for load.</li> <li>Portability \u2013 Runs anywhere Docker is installed.</li> <li>Rapid Deployment \u2013 Spin up instances quickly.</li> <li>Simplified Maintenance \u2013 Update, restart, or replace containers with minimal impact.</li> </ol>"},{"location":"dockerization/#why-use-elasticsearch-with-docker","title":"Why Use Elasticsearch with Docker","text":"<p>Docker addresses operational challenges:</p> <ul> <li>Reduces manual configuration errors.</li> <li>Simplifies cluster management and scaling.</li> <li>Enables version-controlled deployments.</li> <li>Integrates with Kibana, Logstash, and Beats seamlessly.</li> </ul>"},{"location":"dockerization/#why-we-need-docker-compose","title":"Why We Need Docker Compose","text":"<p>Docker Compose defines and runs multi-container applications:</p> <ul> <li>Configure multi-node clusters easily.</li> <li>Automate linking between Elasticsearch, Kibana, and other components.</li> <li>Mount persistent volumes and manage environment variables centrally.</li> <li>Ensures reproducible, fully automated deployments.</li> </ul>"},{"location":"dockerization/#goal-of-dockerizing-elasticsearch","title":"Goal of Dockerizing Elasticsearch","text":"<p>Objective: a fully automated, zero-manual-intervention Elasticsearch deployment for development, testing, or production.</p> <ul> <li>Spin up Elasticsearch and Kibana with one command</li> <li>Pre-configured volumes, networking, and resources</li> <li>Repeatable deployments across environments</li> <li>Minimal setup overhead for focus on data and insights</li> </ul>"},{"location":"gettingStarted/","title":"Getting Started: Dockerized Elasticsearch &amp; Kibana","text":"<p>This guide walks you through four deployment approaches, from simple demonstration setups to somewhat scalable, production-ready environments:</p> Approach Description Use Case 1. Single-node, no security Basic single-container setup without authentication. Learning/demo only, not for production. 2. Single-node, with security Adds authentication and TLS. Development/testing with secure access. 3. Multi-node cluster Multiple Elasticsearch nodes using Docker Compose. Resilient, realistic environment. 4. Multi-node with Kubernetes Kubernetes orchestration for Elasticsearch and Kibana. Production-ready with scaling and automation. <p>Why this order: Start simple, gradually introduce security and clustering, and finally move to orchestrated, scalable deployments.</p> <p>Note: First approach is for demonstration purposes only and should never be used practically.</p>"},{"location":"introduction/","title":"Introduction","text":""},{"location":"introduction/#overview","title":"Overview","text":"<p>In modern software systems, observability\u2014understanding system behavior from logs, metrics, and events\u2014is critical for reliability and performance.</p> <p>Elasticsearch and Kibana form the backbone of the ELK/Elastic Stack, enabling real-time storage, search, analysis, and visualization of operational data.</p> <p>Beginners can refer to this introduction. Experienced users may skip to Getting Started.</p>"},{"location":"introduction/#elasticsearch","title":"Elasticsearch","text":"<p>Elasticsearch is a distributed, RESTful search and analytics engine built on Apache Lucene.</p> <p>It is widely used for:</p> <ul> <li>Centralized log storage and retrieval</li> <li>Full-text search in applications and portals</li> <li>Metrics and event data analysis</li> <li>Security analytics (SIEM)</li> <li>Business intelligence dashboards</li> </ul> <p>Key strengths: speed, scalability, horizontal clustering, and millisecond query responses, making it ideal for high-volume, real-time data applications.</p>"},{"location":"introduction/#kibana","title":"Kibana","text":"<p>Kibana provides the visualization and analytics interface for Elasticsearch.</p> <p>It allows teams to:</p> <ul> <li>Explore logs and metrics interactively</li> <li>Build dashboards and visualizations</li> <li>Monitor system health, request patterns, and errors</li> <li>Set alerts and thresholds</li> </ul> <p>Common use: Application and infrastructure monitoring, security analytics, and operational insights.</p>"},{"location":"introduction/#tech-ecosystem-context","title":"Tech Ecosystem Context","text":"<p>Elasticsearch and Kibana integrate with tools like:</p> <ul> <li>Prometheus/Grafana \u2013 Metrics visualization</li> <li>Fluentd/Filebeat/Logstash \u2013 Log ingestion</li> <li>OpenTelemetry \u2013 Tracing</li> <li>AWS OpenSearch \u2013 Managed Elasticsearch</li> </ul> <p>Combined with Docker, they enable scalable, containerized, production-ready observability solutions.</p>"}]}